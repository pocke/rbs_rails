# resolve-type-names: false

class ::Group < ::ApplicationRecord
  extend ::_ActiveRecord_Relation_ClassMethods[::Group, ::Group::ActiveRecord_Relation, ::Integer]

  module ::Group::GeneratedAttributeMethods
    def id: () -> ::Integer

    def id=: (::Integer) -> ::Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ ::Integer?, ::Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> ::Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> ::Array[::Integer?]?

    def id_previously_was: () -> ::Integer?

    def id_before_last_save: () -> ::Integer?

    def id_change_to_be_saved: () -> ::Array[::Integer?]?

    def id_in_database: () -> ::Integer?

    def saved_change_to_id: () -> ::Array[::Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def id_before_type_cast: () -> ::Integer

    def id_for_database: () -> ::Integer

    def created_at: () -> ::ActiveSupport::TimeWithZone

    def created_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def created_at_before_type_cast: () -> ::Time

    def created_at_for_database: () -> ::Time

    def updated_at: () -> ::ActiveSupport::TimeWithZone

    def updated_at=: (::ActiveSupport::TimeWithZone) -> ::ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ::ActiveSupport::TimeWithZone?, ::ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ::ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ::ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> ::Array[::ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void

    def updated_at_before_type_cast: () -> ::Time

    def updated_at_for_database: () -> ::Time
  end
  include ::Group::GeneratedAttributeMethods
  module ::Group::GeneratedAliasAttributeMethods
    include ::Group::GeneratedAttributeMethods
  end
  include ::Group::GeneratedAliasAttributeMethods
  def users: () -> ::User::ActiveRecord_Associations_CollectionProxy
  def users=: (::User::ActiveRecord_Associations_CollectionProxy | ::Array[::User]) -> (::User::ActiveRecord_Associations_CollectionProxy | ::Array[::User])
  def user_ids: () -> ::Array[::Integer]
  def user_ids=: (::Array[::Integer]) -> ::Array[::Integer]

  def thumbnail: () -> ::Thumbnail?
  def thumbnail=: (::Thumbnail?) -> ::Thumbnail?
  def build_thumbnail: (?untyped) -> ::Thumbnail
  def create_thumbnail: (?untyped) -> ::Thumbnail
  def create_thumbnail!: (?untyped) -> ::Thumbnail
  def reload_thumbnail: () -> ::Thumbnail?

  module ::Group::GeneratedAssociationMethods
  end
  include ::Group::GeneratedAssociationMethods

  module ::Group::GeneratedRelationMethods
  end

  class ::Group::ActiveRecord_Relation < ::ActiveRecord::Relation
    include ::Group::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Group, ::Integer]
    include ::Enumerable[::Group]
  end

  class ::Group::ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include ::Enumerable[::Group]
    include ::Group::GeneratedRelationMethods
    include ::_ActiveRecord_Relation[::Group, ::Integer]

    def build: (?::ActiveRecord::Associations::CollectionProxy::_EachPair attributes) ?{ () -> untyped } -> ::Group
             | (::Array[::ActiveRecord::Associations::CollectionProxy::_EachPair] attributes) ?{ () -> untyped } -> ::Array[::Group]
    def create: (?::ActiveRecord::Associations::CollectionProxy::_EachPair attributes) ?{ () -> untyped } -> ::Group
              | (::Array[::ActiveRecord::Associations::CollectionProxy::_EachPair] attributes) ?{ () -> untyped } -> ::Array[::Group]
    def create!: (?::ActiveRecord::Associations::CollectionProxy::_EachPair attributes) ?{ () -> untyped } -> ::Group
               | (::Array[::ActiveRecord::Associations::CollectionProxy::_EachPair] attributes) ?{ () -> untyped } -> ::Array[::Group]
    def reload: () -> ::Array[::Group]

    def replace: (::Array[::Group]) -> void
    def delete: (*::Group | ::Integer) -> ::Array[::Group]
    def destroy: (*::Group | ::Integer) -> ::Array[::Group]
    def <<: (*::Group | ::Array[::Group]) -> self
    def prepend: (*::Group | ::Array[::Group]) -> self
  end
end
